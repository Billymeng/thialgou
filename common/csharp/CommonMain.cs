/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace org.doubango.thialgou.commonWRAP {

using System;
using System.Runtime.InteropServices;

public class CommonMain : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CommonMain(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(CommonMain obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~CommonMain() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          commonWRAPPINVOKE.delete_CommonMain(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public CommonMain() : this(commonWRAPPINVOKE.new_CommonMain(), true) {
    SwigDirectorConnect();
  }

  public virtual int OnElt(CommonElt pcElt) {
    int ret = (SwigDerivedClassHasMethod("OnElt", swigMethodTypes0) ? commonWRAPPINVOKE.CommonMain_OnEltSwigExplicitCommonMain(swigCPtr, CommonElt.getCPtr(pcElt)) : commonWRAPPINVOKE.CommonMain_OnElt(swigCPtr, CommonElt.getCPtr(pcElt)));
    return ret;
  }

  public virtual uint getCurrentPictureId() {
    uint ret = commonWRAPPINVOKE.CommonMain_getCurrentPictureId(swigCPtr);
    return ret;
  }

  public virtual uint getCurrentSliceId() {
    uint ret = commonWRAPPINVOKE.CommonMain_getCurrentSliceId(swigCPtr);
    return ret;
  }

  public virtual uint getCurrentLayerId() {
    uint ret = commonWRAPPINVOKE.CommonMain_getCurrentLayerId(swigCPtr);
    return ret;
  }

  public static void setMainH264(CommonMainH264 pMainH264) {
    commonWRAPPINVOKE.CommonMain_setMainH264(CommonMainH264.getCPtr(pMainH264));
  }

  public static CommonMainH264 getMainH264() {
    IntPtr cPtr = commonWRAPPINVOKE.CommonMain_getMainH264();
    CommonMainH264 ret = (cPtr == IntPtr.Zero) ? null : new CommonMainH264(cPtr, false);
    return ret;
  }

  public static CommonMain getMain() {
    IntPtr cPtr = commonWRAPPINVOKE.CommonMain_getMain();
    CommonMain ret = (cPtr == IntPtr.Zero) ? null : new CommonMain(cPtr, false);
    return ret;
  }

  private void SwigDirectorConnect() {
    if (SwigDerivedClassHasMethod("OnElt", swigMethodTypes0))
      swigDelegate0 = new SwigDelegateCommonMain_0(SwigDirectorOnElt);
    if (SwigDerivedClassHasMethod("getCurrentPictureId", swigMethodTypes1))
      swigDelegate1 = new SwigDelegateCommonMain_1(SwigDirectorgetCurrentPictureId);
    if (SwigDerivedClassHasMethod("getCurrentSliceId", swigMethodTypes2))
      swigDelegate2 = new SwigDelegateCommonMain_2(SwigDirectorgetCurrentSliceId);
    if (SwigDerivedClassHasMethod("getCurrentLayerId", swigMethodTypes3))
      swigDelegate3 = new SwigDelegateCommonMain_3(SwigDirectorgetCurrentLayerId);
    commonWRAPPINVOKE.CommonMain_director_connect(swigCPtr, swigDelegate0, swigDelegate1, swigDelegate2, swigDelegate3);
  }

  private bool SwigDerivedClassHasMethod(string methodName, Type[] methodTypes) {
    System.Reflection.MethodInfo methodInfo = this.GetType().GetMethod(methodName, System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance, null, methodTypes, null);
    bool hasDerivedMethod = methodInfo.DeclaringType.IsSubclassOf(typeof(CommonMain));
    return hasDerivedMethod;
  }

  private int SwigDirectorOnElt(IntPtr pcElt) {
    return OnElt((pcElt == IntPtr.Zero) ? null : new CommonElt(pcElt, false));
  }

  private uint SwigDirectorgetCurrentPictureId() {
    return getCurrentPictureId();
  }

  private uint SwigDirectorgetCurrentSliceId() {
    return getCurrentSliceId();
  }

  private uint SwigDirectorgetCurrentLayerId() {
    return getCurrentLayerId();
  }

  public delegate int SwigDelegateCommonMain_0(IntPtr pcElt);
  public delegate uint SwigDelegateCommonMain_1();
  public delegate uint SwigDelegateCommonMain_2();
  public delegate uint SwigDelegateCommonMain_3();

  private SwigDelegateCommonMain_0 swigDelegate0;
  private SwigDelegateCommonMain_1 swigDelegate1;
  private SwigDelegateCommonMain_2 swigDelegate2;
  private SwigDelegateCommonMain_3 swigDelegate3;

  private static Type[] swigMethodTypes0 = new Type[] { typeof(CommonElt) };
  private static Type[] swigMethodTypes1 = new Type[] {  };
  private static Type[] swigMethodTypes2 = new Type[] {  };
  private static Type[] swigMethodTypes3 = new Type[] {  };
}

}
