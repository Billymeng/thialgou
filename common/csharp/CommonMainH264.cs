/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace org.doubango.thialgou.commonWRAP {

using System;
using System.Runtime.InteropServices;

public class CommonMainH264 : CommonMain {
  private HandleRef swigCPtr;

  internal CommonMainH264(IntPtr cPtr, bool cMemoryOwn) : base(commonWRAPPINVOKE.CommonMainH264_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(CommonMainH264 obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~CommonMainH264() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          commonWRAPPINVOKE.delete_CommonMainH264(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public CommonMainH264() : this(commonWRAPPINVOKE.new_CommonMainH264(), true) {
    SwigDirectorConnect();
  }

  public override uint getCurrentPictureId() {
    uint ret = (SwigDerivedClassHasMethod("getCurrentPictureId", swigMethodTypes1) ? commonWRAPPINVOKE.CommonMainH264_getCurrentPictureIdSwigExplicitCommonMainH264(swigCPtr) : commonWRAPPINVOKE.CommonMainH264_getCurrentPictureId(swigCPtr));
    return ret;
  }

  public override uint getCurrentSliceId() {
    uint ret = (SwigDerivedClassHasMethod("getCurrentSliceId", swigMethodTypes2) ? commonWRAPPINVOKE.CommonMainH264_getCurrentSliceIdSwigExplicitCommonMainH264(swigCPtr) : commonWRAPPINVOKE.CommonMainH264_getCurrentSliceId(swigCPtr));
    return ret;
  }

  public override uint getCurrentLayerId() {
    uint ret = (SwigDerivedClassHasMethod("getCurrentLayerId", swigMethodTypes3) ? commonWRAPPINVOKE.CommonMainH264_getCurrentLayerIdSwigExplicitCommonMainH264(swigCPtr) : commonWRAPPINVOKE.CommonMainH264_getCurrentLayerId(swigCPtr));
    return ret;
  }

  private void SwigDirectorConnect() {
    if (SwigDerivedClassHasMethod("OnElt", swigMethodTypes0))
      swigDelegate0 = new SwigDelegateCommonMainH264_0(SwigDirectorOnElt);
    if (SwigDerivedClassHasMethod("getCurrentPictureId", swigMethodTypes1))
      swigDelegate1 = new SwigDelegateCommonMainH264_1(SwigDirectorgetCurrentPictureId);
    if (SwigDerivedClassHasMethod("getCurrentSliceId", swigMethodTypes2))
      swigDelegate2 = new SwigDelegateCommonMainH264_2(SwigDirectorgetCurrentSliceId);
    if (SwigDerivedClassHasMethod("getCurrentLayerId", swigMethodTypes3))
      swigDelegate3 = new SwigDelegateCommonMainH264_3(SwigDirectorgetCurrentLayerId);
    commonWRAPPINVOKE.CommonMainH264_director_connect(swigCPtr, swigDelegate0, swigDelegate1, swigDelegate2, swigDelegate3);
  }

  private bool SwigDerivedClassHasMethod(string methodName, Type[] methodTypes) {
    System.Reflection.MethodInfo methodInfo = this.GetType().GetMethod(methodName, System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance, null, methodTypes, null);
    bool hasDerivedMethod = methodInfo.DeclaringType.IsSubclassOf(typeof(CommonMainH264));
    return hasDerivedMethod;
  }

  private int SwigDirectorOnElt(IntPtr pcElt) {
    return OnElt((pcElt == IntPtr.Zero) ? null : new CommonElt(pcElt, false));
  }

  private uint SwigDirectorgetCurrentPictureId() {
    return getCurrentPictureId();
  }

  private uint SwigDirectorgetCurrentSliceId() {
    return getCurrentSliceId();
  }

  private uint SwigDirectorgetCurrentLayerId() {
    return getCurrentLayerId();
  }

  public delegate int SwigDelegateCommonMainH264_0(IntPtr pcElt);
  public delegate uint SwigDelegateCommonMainH264_1();
  public delegate uint SwigDelegateCommonMainH264_2();
  public delegate uint SwigDelegateCommonMainH264_3();

  private SwigDelegateCommonMainH264_0 swigDelegate0;
  private SwigDelegateCommonMainH264_1 swigDelegate1;
  private SwigDelegateCommonMainH264_2 swigDelegate2;
  private SwigDelegateCommonMainH264_3 swigDelegate3;

  private static Type[] swigMethodTypes0 = new Type[] { typeof(CommonElt) };
  private static Type[] swigMethodTypes1 = new Type[] {  };
  private static Type[] swigMethodTypes2 = new Type[] {  };
  private static Type[] swigMethodTypes3 = new Type[] {  };
}

}
